// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _01_DB;

#nullable disable

namespace _01_DB.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230705104353_CreateAndSeedDB")]
    partial class CreateAndSeedDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_01_DB.Entities.Beer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BreweryId")
                        .HasColumnType("int");

                    b.Property<double>("Degree")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BreweryId");

                    b.ToTable("Beer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BreweryId = 1,
                            Degree = 8.4000000000000004,
                            Name = "Triple Karmeliet",
                            Price = 2.7000000000000002
                        },
                        new
                        {
                            Id = 2,
                            BreweryId = 1,
                            Degree = 8.4000000000000004,
                            Name = "Kwak",
                            Price = 2.4500000000000002
                        },
                        new
                        {
                            Id = 3,
                            BreweryId = 2,
                            Degree = 5.7999999999999998,
                            Name = "WestVletteren Blonde",
                            Price = 8.0
                        },
                        new
                        {
                            Id = 4,
                            BreweryId = 2,
                            Degree = 8.0,
                            Name = "WestVletteren 8",
                            Price = 11.0
                        },
                        new
                        {
                            Id = 5,
                            BreweryId = 2,
                            Degree = 12.0,
                            Name = "WestVletteren 12",
                            Price = 14.0
                        },
                        new
                        {
                            Id = 6,
                            BreweryId = 3,
                            Degree = 6.7000000000000002,
                            Name = "Grimbergen Blonde",
                            Price = 2.2000000000000002
                        },
                        new
                        {
                            Id = 7,
                            BreweryId = 3,
                            Degree = 6.5,
                            Name = "Grimbergen Double",
                            Price = 2.2000000000000002
                        },
                        new
                        {
                            Id = 8,
                            BreweryId = 3,
                            Degree = 8.0,
                            Name = "Grimbergen Triple",
                            Price = 2.2999999999999998
                        });
                });

            modelBuilder.Entity("_01_DB.Entities.Brewery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Brewery", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bosteels"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Abbaye St-Sixtus"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Abbaye de Grimbergen"
                        });
                });

            modelBuilder.Entity("_01_DB.Entities.StockBeerWholesaler", b =>
                {
                    b.Property<int>("BeerId")
                        .HasColumnType("int");

                    b.Property<int>("WholesalerId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BeerId", "WholesalerId");

                    b.HasIndex("WholesalerId");

                    b.ToTable("StockBeerWholesaler", (string)null);

                    b.HasData(
                        new
                        {
                            BeerId = 1,
                            WholesalerId = 1,
                            Quantity = 500
                        },
                        new
                        {
                            BeerId = 2,
                            WholesalerId = 1,
                            Quantity = 300
                        },
                        new
                        {
                            BeerId = 6,
                            WholesalerId = 1,
                            Quantity = 200
                        },
                        new
                        {
                            BeerId = 7,
                            WholesalerId = 1,
                            Quantity = 200
                        },
                        new
                        {
                            BeerId = 3,
                            WholesalerId = 2,
                            Quantity = 200
                        },
                        new
                        {
                            BeerId = 4,
                            WholesalerId = 2,
                            Quantity = 200
                        },
                        new
                        {
                            BeerId = 5,
                            WholesalerId = 2,
                            Quantity = 200
                        });
                });

            modelBuilder.Entity("_01_DB.Entities.Wholesaler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Wholesaler", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "GeneDrinks"
                        },
                        new
                        {
                            Id = 2,
                            Name = "TangissartShop"
                        });
                });

            modelBuilder.Entity("_01_DB.Entities.Beer", b =>
                {
                    b.HasOne("_01_DB.Entities.Brewery", "Brewer")
                        .WithMany("Beers")
                        .HasForeignKey("BreweryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brewer");
                });

            modelBuilder.Entity("_01_DB.Entities.StockBeerWholesaler", b =>
                {
                    b.HasOne("_01_DB.Entities.Beer", "beer")
                        .WithMany("Wholesalers")
                        .HasForeignKey("BeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_01_DB.Entities.Wholesaler", "Saler")
                        .WithMany("Beers")
                        .HasForeignKey("WholesalerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Saler");

                    b.Navigation("beer");
                });

            modelBuilder.Entity("_01_DB.Entities.Beer", b =>
                {
                    b.Navigation("Wholesalers");
                });

            modelBuilder.Entity("_01_DB.Entities.Brewery", b =>
                {
                    b.Navigation("Beers");
                });

            modelBuilder.Entity("_01_DB.Entities.Wholesaler", b =>
                {
                    b.Navigation("Beers");
                });
#pragma warning restore 612, 618
        }
    }
}
